{"version":3,"file":"dutier.js","sources":["../src/providers.js","../src/updateState.js","../src/setReducer.js","../src/asyncReducer.js","../src/applyHandler.js","../src/applyMiddleware.js","../src/dispatch.js","../src/getState.js","../src/unsubscribe.js","../src/subscribe.js","../src/createStore.js","../src/combine.js","../src/middleware.js"],"sourcesContent":["/**\n * The Providers\n */ \nexport const Provider = {\n  // The reducers\n  _reducers: new Map(),\n  // The subscribe handlers\n  _handlers: [],\n  // the middlewares\n  _middlewares: [],\n  // The state manager\n  _updateState: function(){}\n}","/**\n * Creates a Dutier store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n * @param { Object } state The initial application state\n * @return {Function} currentState Return a function that\n * updates and returns the current state\n */\nexport default (state) => {\n  return (\n    function(state) {\n      return current => {\n        state = Object.assign({}, state, current)\n        return Object.assign({}, state)\n      }\n    }(state)\n  )\n}\n","import { Provider } from './providers'\nimport create from './updateState'\n\n/**\n * @name setReducer\n * @description Set the reducer function, the\n * initial state of the reducer and store state\n */\nexport default reducers => {\n  // if createStore don't was called yet\n  if (Provider._updateState({}) === undefined) {\n    Provider._updateState = create({})\n  }\n  reducers.forEach(reducer => {\n    const initial = reducer(undefined, { type: '@@DUTIER.INITIAL_STATE' })\n    Provider._reducers.set(reducer, { initial })\n    Provider._updateState(initial)\n  })\n}\n","import { Provider } from './providers'\n\n/**\n * Async Reducer\n * Just dispatch if return new state values.\n * With this, the subscribe function will not be\n * called unnecessary, because the state don't be changed\n */\nexport default action => {\n  return new Promise( resolve  => {\n    for ( let reducer of Provider._reducers ) {\n      const [ reducerFunction, reducerProps ] = reducer\n      const stateReducer = reducerProps.current ? reducerProps.current : reducerProps.initial\n      const current = reducerProps.current = reducerFunction(stateReducer, action)\n      const reducerOldState = reducerFunction(stateReducer, { type: '@@Dutier.OLD_STATE', value: action.value })\n      // pass old state just to middleware\n      const oldState = Object.assign({}, Provider._updateState({}), reducerOldState)\n      if (JSON.stringify( current ) !== JSON.stringify(stateReducer)) {\n        return resolve({ action, oldState, state: Provider._updateState(current) })\n      }\n    }\n  })\n}\n","import { Provider } from './providers'\n\n/**\n * Apply the subscribe handler functions\n */ \nexport default ({ type, state }) => {\n  Provider._handlers.forEach(handler => {\n    if (handler !== undefined && typeof handler === 'function') {\n      handler({ type, state })\n    }\n  })\n  return { type, state }\n}\n","import { Provider } from './providers'\n\nexport default data => {\n  Provider._middlewares.forEach( middleware => middleware.call(null, data) )\n  return Promise.resolve({ type:data.action.type, state: data.state });\n}","import asyncReducer from './asyncReducer'\nimport applyHandler from './applyHandler'\nimport applyMiddleware from './applyMiddleware'\n\n/**\n   * @name dispatch\n   * @description Dispatch an action to change\n   * the store state\n   * @param { Object } payload The action payload\n   */  \n  export default payload => {\n    return new Promise( resolve => \n      payload.call(null, resolve )\n    )\n    .then(asyncReducer)\n    .then(applyMiddleware)\n    .then(applyHandler)\n  }","import {Provider} from './providers'\n\n/**\n * @name getState\n * @return {Object} a copy of the state\n */\nexport default () => {\n  return Provider._updateState({})\n}\n","import { Provider } from './providers'\n\n/**\n * @name unsubscribe\n * @description Unsubscribes from listening to a component\n * @param {Function} handler The handler function\n **/\nexport default (handler) => {\n  Provider._handlers.forEach((fn, index) => {\n    if (fn === handler) {\n      Provider._handlers.splice(index, 1)\n    }\n  })\n}\n","import { Provider } from './providers'\nimport unsubscribe from './unsubscribe'\n\n/**\n * Subscribe to receive notifications when state is updated.\n * @name subscribe\n * @description Subscribe to call the handler function when the action will be triggered\n * @param {Function} handler The function that will be called\n **/\nexport default (handler) => {\n  Provider._handlers.push(handler)\n  return () => {\n    unsubscribe(handler)\n  }\n}\n","import { Provider } from './providers'\nimport setReducer from './setReducer'\nimport create from './updateState'\nimport dispatch from './dispatch'\nimport getState from './getState'\nimport subscribe from './subscribe'\n\n/**\n * @name createStore\n * @description Sets the store state\n * @param {Object} data Simple Object that contain the State\n * @param {Function} reducers The action reducers\n */\nexport default ( ...reducers ) => {\n  if (Provider._updateState({}) === undefined) {\n    Provider._updateState = create({})\n  }\n  setReducer(reducers)\n  return { dispatch, subscribe, getState }\n}\n","import setReducer from './setReducer'\n\n/**\n * @name combine\n * @description Combine the reducers\n */  \nexport default (...reducers) => { \n  setReducer(reducers)\n}\n","import { Provider } from './providers'\n\nexport default (...middlewares) => {\n  Provider._middlewares = Provider._middlewares.concat(middlewares)\n} "],"names":["Provider","Map","state","Object","assign","current","_updateState","undefined","create","forEach","initial","reducer","type","_reducers","set","Promise","reducerFunction","reducerProps","stateReducer","action","reducerOldState","value","oldState","JSON","stringify","resolve","_handlers","handler","_middlewares","middleware","call","data","payload","then","asyncReducer","applyMiddleware","applyHandler","fn","index","splice","push","reducers","dispatch","subscribe","getState","middlewares","concat"],"mappings":"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"}